call plug#begin('~/.vim/plugged')

" helpful utils
Plug 'tpope/vim-commentary'
Plug 'psliwka/vim-smoothie'

" coloscheme
Plug 'morhetz/gruvbox'

" lightline
Plug 'itchyny/lightline.vim'
Plug 'itchyny/vim-gitbranch'

" navigation shortcuts
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" Golang plugin
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }

Plug 'airblade/vim-gitgutter'

Plug 'vim-autoformat/vim-autoformat'

Plug 'nathanaelkane/vim-indent-guides'

call plug#end()

" ================================
" General Settings
" ================================
set mouse=a
set number
set nofoldenable
set background=dark
" syntax enable
let g:gruvbox_contrast_dark='soft'
colorscheme gruvbox

" set iterm tab to file basename
set title
set titlestring=%t

" Copy to clipboard
vmap <C-C> "+y

" Fuzzy-find
set rtp+=/usr/local/opt/fzf
map <C-P> :FZF<CR>

" Persistent Undo
set undofile
set undodir=~/.vim/undodir

" Spacing
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" Hightlight trailing spaces in red
:highlight ExtraWhitespace ctermbg=red guibg=red
:match ExtraWhitespace /\s\+$/

:set fileformat=unix

" ================================
" Golang Settings
" =================================
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1

au FileType go set noexpandtab
au FileType go set shiftwidth=4
au FileType go set softtabstop=4
au FileType go set tabstop=4

" let g:go_highlight_build_constraints = 1
" let g:go_highlight_extra_types = 1
" let g:go_highlight_fields = 1
" let g:go_highlight_functions = 1
" let g:go_highlight_methods = 1
" let g:go_highlight_operators = 1
" let g:go_highlight_structs = 1
" let g:go_highlight_types = 1
" let g:go_highlight_variable_declarations = 1

" ==========================
" Custom settings
" ==========================

" center the line when jumping to it
nnoremap gg ggzz

" move up and down single screen row
nnoremap j gj
nnoremap k gk
nnoremap <up> g<up>
nnoremap <down> g<down>

" Lowercase highlight upper case but not the other way around
set incsearch
set ignorecase
set smartcase
set hlsearch
set cursorline " Highlight the current line

vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

let g:lightline = {
      \ 'colorscheme': 'gruvbox',
      \ 'active': {
        \   'left': [ [ 'mode', 'paste' ],
        \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
        \ },
        \ 'component_function': {
          \   'gitbranch': 'gitbranch#name'
          \ },
          \ }

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" WSL yank support
set clipboard+=unnamedplus
let g:clipboard = {
      \   'name': 'win32yank-wsl',
      \   'copy': {
        \      '+': 'win32yank.exe -i --crlf',
        \      '*': 'win32yank.exe -i --crlf',
        \    },
        \   'paste': {
          \      '+': 'win32yank.exe -o --lf',
          \      '*': 'win32yank.exe -o --lf',
          \   },
          \   'cache_enabled': 0,
          \ }

" paste and reyank last selected
xnoremap p pgvy

" autoindent html on save
au BufWrite * :Autoformat

au FileType html set shiftwidth=2
au FileType html set softtabstop=2
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 3
let g:indent_guides_guide_size = 1

